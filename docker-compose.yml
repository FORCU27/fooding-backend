version: '3.8'
services:
  mysql:
    image: mysql:8
    container_name: fooding-mysql
    restart: always
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --explicit_defaults_for_timestamp=1
    ports:
      - 3308:3306
    environment:
      - MYSQL_DATABASE=fooding
      - MYSQL_ROOT_PASSWORD=1234
      - TZ=Asia/Seoul
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: fooding-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=1234
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - 9200:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: fooding-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN=${ES_SERVICE_TOKEN}
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - elk
      
  redis:
    image: redis:7-alpine
    container_name: fooding-redis
    restart: always
    ports:
      - 6379:6379
    environment:
      - TZ=Asia/Seoul
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass 1234
    
  mongodb:
    image: mongo:6
    container_name: fooding-mongodb
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=1234
      - TZ=Asia/Seoul
    volumes:
      - ./mongo/init:/docker-entrypoint-initdb.d
      - mongo_data:/data/db

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: fooding-kafka
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@fooding-kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://fooding-kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: fooding-kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=fooding-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=fooding-kafka:29092
    ports:
      - "9090:8080"
    depends_on:
      - kafka
    networks:
      - kafka-net

volumes:
  esdata: {}
  mongo_data:
  redis_data:
  kafka_data:

networks:
  elk: {}
  kafka-net:
    driver: bridge
